version: '3.8'

services:
  document-control:
    build:
      context: .
      dockerfile: Dockerfile
    image: document-control-microservice:latest
    container_name: document-control
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - PORT=3000
      - AUTH_MODE=jwt
      - AWS_REGION=${AWS_REGION:-us-east-1}
      - S3_BUCKET=${S3_BUCKET}
      - KMS_KEY_ARN=${KMS_KEY_ARN}
      - COGNITO_ISSUER=${COGNITO_ISSUER}
      - COGNITO_JWKS_URI=${COGNITO_JWKS_URI}
      - TSA_URL_SANDBOX=${TSA_URL_SANDBOX:-http://timestamp.digicert.com}
      - TEMPLATE_ROOT=/app/templates
    volumes:
      - ./logs:/app/logs
      - ../template:/app/templates:ro
    networks:
      - document-control-network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/health', (r) => { process.exit(r.statusCode === 200 ? 0 : 1); })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Optional: LocalStack for local S3 testing
  localstack:
    image: localstack/localstack:latest
    container_name: localstack
    ports:
      - "4566:4566"
    environment:
      - SERVICES=s3,kms
      - DEBUG=1
      - DATA_DIR=/tmp/localstack/data
    volumes:
      - localstack-data:/tmp/localstack
    networks:
      - document-control-network

  # Optional: Prometheus for metrics
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    networks:
      - document-control-network

  # Optional: Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-data:/var/lib/grafana
    networks:
      - document-control-network

networks:
  document-control-network:
    driver: bridge

volumes:
  localstack-data:
  prometheus-data:
  grafana-data:
